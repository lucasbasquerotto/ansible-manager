#!/bin/bash
set -eou pipefail

ctl_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

main_env_dir="env-main"

CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m' # No Color

function error {
	msg="$(date '+%F %T') - ${BASH_SOURCE[0]}: line ${BASH_LINENO[0]}: ${*}"
	>&2 echo -e "${RED}${msg}${NC}"
	exit 2
}

command="${1:-}"

if [ -z "$command" ]; then
	error "[error] no command entered"
fi

shift;

case "$command" in
	"setup"|"s")
		env_repo_default=${1:-}

		echo -e "${CYAN}$(date '+%F %T') Setup started at $(date '+%F %T')${NC}"

		git_repo=''

		if [ -d "$ctl_dir/$main_env_dir" ]; then
			git_repo=$(git --git-dir="$ctl_dir/$main_env_dir/.git" remote get-url origin || :);
		fi

		if [ -z "$git_repo" ]; then
			rm -rf "${ctl_dir:?}/$main_env_dir"

			if [ -z "$env_repo_default" ]; then
				read -r -e -p "Enter the main (global) git environment repository: " \
					-i "your-repo.git" git_repo
			else
				git_repo="$env_repo_default"
			fi

			git config --global credential.helper store
			git clone "$git_repo" "$ctl_dir/$main_env_dir"
		fi
		;;
	"reset")
		rm -rf "${ctl_dir:?}/$main_env_dir"
		rm -rf "$ctl_dir/tmp"
		;;
	"stop-all")
		mapfile -t list < <(sudo docker ps -q)
		[[ ${#list[@]} -gt 0 ]] && sudo docker container stop "${list[@]}"
		;;
	"rm-all")
		mapfile -t list < <(sudo docker ps -aq)
		[[ ${#list[@]} -gt 0 ]] && sudo docker container rm -f "${list[@]}"
		;;
	"enter")
		# shellcheck source=./files/env.sample.sh
		source "${ctl_dir}/env-main/env.sh"

		var_container="$container"
		var_container_type="${container_type:-}"
		var_allow_container_type="${allow_container_type:-}"
		var_root="${root:-}"

		if [ "$var_container_type" = "" ]; then
			var_container_type="docker"
		fi

		if [ "$var_allow_container_type" != 'true' ]; then
			if [ "$var_container_type" != 'docker' ] && [ "$var_container_type" != 'podman' ]; then
				error "[error] unsupported container type: $var_container_type"
			fi
		fi

		cmd=( "$var_container_type" )

		if [ "$var_root" = 'true' ]; then
			cmd=( sudo "$var_container_type" )
		fi

		"${cmd[@]}" run --rm -it \
			--name="local-ctl-init" \
			--workdir="/main/tmp" \
			-v "${ctl_dir}/tmp:/main/tmp" \
			-e "UID=$(id -u)" \
			-e "GID=$(id -g)" \
			"$var_container" \
			|| error "[error] $command"
		;;
	"launch"|"l")
		"$ctl_dir/launch" "${@}"
		;;
	*)
		echo -e "${RED}[error] invalid command: $command${NC}"
		exit 1
		;;
esac
