- name: Play 01 - Prepare the project
  hosts: main
  gather_facts: no
  tasks:
    ### Main - Start ###

    - set_fact:
        main_title: "[ctl] main"
        main_root_dir: "{{ env_root_dir }}"
        env_main_dir: "{{ env_root_dir }}/ctl/env-main"
      tags: ["no_print"]

    - name: "{{ main_title }} - gathering facts"
      setup:

    - name: "{{ main_title }} - vars - load the main environment vars"
      include_vars:
        file: "{{ env_main_dir }}/vars.yml"
        name: env

    ### Main - Parameters and Variables ###

    - name: "{{ main_title }} - validate - environment"
      fail:
        msg: >-
          trying to run in a development environment when dev is not true
          in the main environment vars
      when: >-
        (env_dev | default(false, true) | bool) and
        (not (env.dev | default(false, true) | bool))
      tags: ["no_print"]

    - name: "{{ main_title }} - vars - load the main environment vars"
      fail:
        msg: "[error] there is no project with the key {{ env_project_key }}"
      when: not (env.projects[env_project_key] is defined)
      tags: ["no_print"]

    ### Project - Prepare ###

    - name: "{{ main_title }} - verify the project environment params"
      fail:
        msg: "{{ main_item.name }} not specified for the project environment"
      when: (main_item.value | default('')) == ''
      loop:
        - {
            name: "env_project_key",
            value: "{{ env_project_key | default('') }}",
          }
      loop_control:
        loop_var: main_item
        label: "{{ main_item.name }}"
      tags: ["no_print"]

    - name: "{{ main_title }} - project"
      set_fact:
        project: "{{ env.projects[env_project_key] }}"
      tags: ["no_print"]

    ### Project - Start ###

    - name: "[ctl] [project - {{ env_project_key }}] - define project title"
      set_fact:
        project_title: >-
          [ctl] [project - {{ env_project_key }}]{{
            ((project.title | default('')) != '')
            | ternary(' - ' + (project.title | default('')), '')
          }}
      tags: ["no_print"]

    - name: "{{ project_title }} - project_dir_rel"
      set_fact:
        project_dir_rel: "projects/{{ env_project_key }}"
      tags: ["no_print"]

    - name: "{{ project_title }} - project_params - validate (required)"
      fail:
        msg: "project has neither {{ project_item }} nor shared_{{ project_item }} defined (define one)"
      when: >-
        ((project['shared_' + project_item] | default('')) == '')
        and
        (project[project_item] is not defined)
      loop:
        - "init"
        - "repo"
      loop_control:
        loop_var: "project_item"
      tags: ["no_print"]

    - name: "{{ project_title }} - project_params - validate (duplicate)"
      fail:
        msg: "project has {{ project_item }} and shared_{{ project_item }} defined (define only one)"
      when: >-
        ((project['shared_' + project_item] | default('')) != '')
        and
        (project[project_item] is defined)
      loop:
        - "init"
        - "repo"
        - "repo_vault"
        - "env_params"
        - "path_params"
      loop_control:
        loop_var: "project_item"
      tags: ["no_print"]

    - name: "{{ project_title }} - project_params - validate (shared not defined)"
      fail:
        msg: >-
          project has shared_{{ project_item }} defined but
          {{ project_item }}.{{ project_item_shared }} is not defined in the env vars
      when: (project_item_shared != '') and ((env[project_item] | default({}))[project_item_shared] is not defined)
      vars:
        project_item_shared: "{{ project['shared_' + project_item] | default('') }}"
      loop:
        - "init"
        - "repo"
        - "repo_vault"
        - "env_params"
        - "path_params"
      loop_control:
        loop_var: "project_item"
      tags: ["no_print"]

    - name: "{{ project_title }} - project_params - init"
      set_fact:
        project_params: {}
      tags: ["no_print"]

    - name: "{{ project_title }} - project_params - fill"
      set_fact:
        project_params: >-
          {{
            project_params
            | combine({
              project_item: (project_item_shared != '')
              | ternary(project_item_shared_value, project_item_value)
            })
          }}
      vars:
        project_item_shared: "{{ project['shared_' + project_item] | default('') }}"
        project_item_value: "{{ project[project_item] | default({}) }}"
        project_item_shared_value: >-
          {{ (env[project_item] | default({}))[project_item_shared] | default({}) }}
      loop:
        - "init"
        - "repo"
        - "repo_vault"
        - "env_params"
        - "path_params"
      loop_control:
        loop_var: "project_item"
      tags: ["no_print"]

    ### Project - Validations ###

    - name: "{{ project_title }} - verify the project init params"
      fail:
        msg: "container not specified for the project init params"
      when: (project_params.init.container | default('')) == ''
      tags: ["no_print"]

    - name: "{{ project_title }} - verify the project repo params"
      fail:
        msg: "{{ project_item }} not specified for the project repository"
      when: (project_params.repo[project_item] | default('')) == ''
      loop:
        - "src"
        - "version"
      loop_control:
        loop_var: project_item
      tags: ["no_print"]

    ### Project - Parameters and Variables ###

    - name: "{{ project_title }} - define the project base dirs"
      set_fact:
        project_base_dir: "{{ main_root_dir }}/{{ project_dir_rel }}"
        project_secrets_base_dir: "{{ main_root_dir }}/{{ project_dir_rel }}/secrets"
        project_files_base_dir: "{{ main_root_dir }}/{{ project_dir_rel }}/files"
      tags: ["no_print"]

    - name: "{{ project_title }} - define the project dirs"
      set_fact:
        project_secrets_dir: "{{ project_secrets_base_dir }}/ctl"
        project_files_dir: "{{ project_files_base_dir }}/ctl"
      tags: ["no_print"]

    - name: "{{ project_title }} - define the project files"
      set_fact:
        projext_lax: "{{ project.lax | default(env_dev | default(false, true)) }}"
        project_repo_ssh_file: >-
          {{
            ((project_params.repo.ssh_file | default('')) != '')
            | ternary('ssh.key', '')
          }}
        project_repo_vault_file: >-
          {{
            ((project_params.repo_vault.file | default('')) != '')
            | ternary('vault', '')
          }}
      tags: ["no_print"]

    - name: "{{ project_title }} - define the project init params"
      set_fact:
        project_init_params:
          key: "{{ env_project_key }}"
          migration: "{{ env_migration | default(project.migration | default(''), true) }}"
          ctxs: "{{ project.ctxs | default([]) }}"
          dev: "{{ env_dev | default(false, true) }}"
          lax: "{{ projext_lax | default(false, true) }}"
          local: "{{ project.local | default(false, true) }}"
          project_dir_rel: "{{ project_dir_rel }}"
          init:
            container: "{{ project_params.init.container }}"
            container_type: "{{ project_params.init.container_type | default('') }}"
            allow_container_type: "{{ project_params.init.allow_container_type | default(false) }}"
            root: "{{ project_params.init.root | default(false, true) }}"
            run_file: "{{ project_params.init.run_file | default('/usr/local/bin/run') }}"
          repo:
            env_file: "{{ project.env_file }}"
            src: "{{ project_params.repo.src }}"
            version: "{{ project_params.repo.version }}"
            ssh_file: "{{ project_repo_ssh_file }}"
          repo_vault:
            force: "{{ project_params.repo_vault.force | default(false, true) }}"
            file: "{{ project_repo_vault_file }}"
          env_params: "{{ project_params.env_params }}"
          path_params: "{{ project_params.path_params }}"

    ### Project - Directories and Files ###

    - name: "{{ project_title }} - create the project directories"
      file:
        path: "{{ project_item }}"
        state: directory
        mode: "{{ projext_lax | default(false, true) | bool | ternary(0777, 0755) }}"
      loop:
        - "{{ project_base_dir }}"
        - "{{ project_secrets_base_dir }}"
        - "{{ project_files_base_dir }}"
        - "{{ project_secrets_dir }}"
        - "{{ project_files_dir }}"
      loop_control:
        loop_var: project_item

    - name: "{{ project_title }} - copy the ssh file"
      copy:
        src: "{{ env_main_dir }}/{{ project_params.repo.ssh_file }}"
        dest: "{{ project_secrets_dir }}/{{ project_repo_ssh_file }}"
        decrypt: "{{ project_params.repo.ssh_file_encrypted | default(false) | bool }}"
        mode: 0600
      when: project_repo_ssh_file != ''

    - name: "{{ project_title }} - copy the vault file"
      copy:
        src: "{{ env_main_dir }}/{{ project_params.repo_vault.file }}"
        dest: "{{ project_secrets_dir }}/{{ project_repo_vault_file }}"
        mode: "{{ projext_lax | default(false, true) | bool | ternary(0666, 0600) }}"
      when: project_repo_vault_file != ''

    - name: "{{ project_title }} - create the project init config file (vars.yml)"
      copy:
        content: "{{ project_init_params | to_nice_yaml }}"
        dest: "{{ project_files_dir }}/vars.yml"
        mode: "{{ projext_lax | default(false, true) | bool | ternary(0666, 0600) }}"

    - name: "{{ project_title }} - project_init_params_list_seed"
      set_fact:
        project_init_params_list_seed:
          - key: "key"
            value: "{{ project_init_params.key }}"
          - key: "dev"
            value: "{{ project_init_params.dev | bool | ternary('true', 'false') }}"
          - key: "project_dir_rel"
            value: "{{ project_init_params.project_dir_rel }}"
          - key: "container"
            value: "{{ project_init_params.init.container }}"
          - key: "container_type"
            value: "{{ project_init_params.init.container_type }}"
          - key: "allow_container_type"
            value: "{{ project_init_params.init.allow_container_type | bool | ternary('true', 'false') }}"
          - key: "root"
            value: "{{ project_init_params.init.root | bool | ternary('true', 'false') }}"
          - key: "run_file"
            value: "{{ project_init_params.init.run_file }}"
          - key: "force_vault"
            value: "{{ project_init_params.repo_vault.force | bool | ternary('true', 'false') }}"
        project_init_params_list: ["#!/bin/bash"]
      tags: ["no_print"]

    - name: "{{ project_title }} - project_init_params_list"
      set_fact:
        project_init_params_list: >-
          {{
            project_init_params_list
            + ['export ' + project_item.key + '=' + (project_item.value | quote)]
          }}
      loop: "{{ project_init_params_list_seed }}"
      loop_control:
        loop_var: project_item
        label: "{{ project_item.key }}"
      tags: ["no_print"]

    - name: "{{ project_title }} - create the project init config file (vars.sh)"
      copy:
        content: "{{ project_init_params_list | join('\n') }}"
        dest: "{{ project_files_dir }}/vars.sh"
        mode: "{{ projext_lax | default(false, true) | bool | ternary(0666, 0600) }}"

    - name: "{{ project_title }} - create the project main run file"
      copy:
        src: "run"
        dest: "{{ project_files_dir }}/run"
        mode: "{{ projext_lax | default(false, true) | bool | ternary(0777, 0711) }}"
