- name: "[ctl] [repo]"
  include_tasks: "tasks/repo_vars.yml"
  tags: ["other"]

- name: "[ctl] [repo] [{{ repo.name }}] create the directories in {{ repo_dest }}"
  file:
    path: "{{ repo_item }}"
    state: directory
    mode: 0755
  loop: 
  - "{{ env.repo_base_dest }}/var"
  - "{{ repo_dest }}/env"
  - "{{ repo_dest }}/var"
  loop_control:
    loop_var: repo_item
  tags: ["other"]

# env repository
  
- name: "[ctl] [repo] [{{ repo.name }}] create file to verify idempotence (if there is still no file)"
  copy: 
    force: no
    content: ""
    dest: "{{ repo_dest }}/var/env.tmp"
    mode: 0600
  tags: ["other"]

- name: "[ctl] [repo] [{{ repo.name }}] fail - repo_env_dest"
  fail:
    msg: >-
      repo_env (specific or global) is not correctly defined for the
      repository [{{ repo.name }}]
  when: (repo_env_dest | default('')) == ''
  tags: ["other"]

- name: "[ctl] [repo] [{{ repo.name }}] - git"
  include_tasks: "tasks/git.yml"
  vars:
    git_title: "[ctl] [repo] [{{ repo.name }}] - git env"
    git_repo_private: "{{ repo_env_repo.private | default(false) }}"
    git_repo_key_file_encrypted: "env-main/{{ repo_env_repo.key_file_encrypted }}"
    git_repo_src: "{{ repo_env_repo.src }}"
    git_repo_version: "{{ repo_env_repo.version }}"
    git_repo_key_file: "{{ repo_dest }}/var/repo.env.key_file"
    git_repo_accept_hostkey: yes
    git_repo_dest: "{{ repo_env_dest }}"
    git_repo_update: "{{ (main_dev | bool) | ternary('no', 'yes') }}"
    git_repo_force: no
    git_task_tags: ["other"]
  when: (not (main_dev | bool)) or (repo.env_repo is defined)
  tags: ["other"]

# preparation file

- name: "[ctl] [repo] [{{ repo.name }}] copy the preparation file ({{ repo_dest }}/prepare)"
  template:
    src: "templates/prepare.tpl.sh"
    dest: "{{ repo_dest }}/prepare"
    mode: 0755
  vars:
    repo: "{{ repo }}"
    repo_dest: "{{ repo_dest }}"
    repo_env_repo: "{{ repo_env_repo }}"
    repo_env_dest: "{{ repo_env_dest }}"
  tags: ["other"]

# vault file

- name: "[ctl] [repo] [{{ repo.name }}] copy the vault file"
  copy:
    src: "env-main/{{ repo_env_repo_vault.file }}"
    dest: "{{ repo_dest }}/var/vault"
    decrypt: yes
    mode: 0600
  when: (repo_env_repo_vault.file | default('')) != ''
  tags: ["other"]