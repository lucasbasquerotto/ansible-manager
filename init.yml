- name: Play 01 - Create and update the main and the environment repositories
  hosts: main
  gather_facts: no
  tasks:

  ### Main - Start ###

  - set_fact:
      main_title: "[ctl] main"

  - name: "{{ main_title }} - gathering facts"
    setup:

  - name: "{{ main_title }} - vars - load the main environment vars"
    include_vars:
      file: "env-main/vars.yml"
      name: env

  ### Main - Parameters and Variables ###

  - name: "{{ main_title }} - vars - load the main environment vars"
    fail:
      msg: >-
        trying to run in a development environment when dev is not true
        in the main environment vars
    when: >-
      (env_dev | default(false, true) | bool) and
      (not (env.dev | default(false, true) | bool))

  - name: "{{ main_title }} - vars - load the main environment vars"
    fail:
      msg: "[error] there is no project with the key {{ env_project_key }}"
    when: not (env.projects[env_project_key] is defined)

  ### Project - Prepare ###

  - name: "{{ main_title }} - verify the project environment params"
    fail:
      msg: "{{ main_item.name }} not specified for the project environment"
    when: (main_item.value | default('')) == ''
    loop:
    - { name: "env_project_key", value: "{{ env_project_key | default('') }}"}
    - { name: "env_root_dir", value: "{{ env_root_dir | default('') }}"}
    loop_control:
      loop_var: main_item
      label: "{{ main_item.name }}"

  - name: "{{ main_title }} - project"
    set_fact:
      project: "{{ env.projects[env_project_key] }}"

  ### Project - Start ###

  - name: "[ctl] [project] - {{ project.name }} - define project title"
    set_fact:
      project_title: "[ctl] [project - {{ env_project_key }}] - {{ project.name }}"

  - name: "{{ project_title }} - project_dir_rel"
    set_fact:
      project_dir_rel: "projects/{{ env_project_key }}"
      project_init: >-
        {{
          ((project.global_init | default('')) != '')
          | ternary(
            env.init[project.global_init | default('')],
            project.init
          )
        }}
      project_repo: >-
        {{
          ((project.global_repo | default('')) != '')
          | ternary(
            env.repo[project.global_repo | default('')],
            project.repo
          )
        }}
      project_repo_vault: >-
        {{
          ((project.global_repo_vault | default('')) != '')
          | ternary(
            env.repo_vault[project.global_repo_vault | default('')],
            project.repo_vault
          )
        }}

  ### Project - Validations ###

  - name: "{{ project_title }} - verify the project init params"
    fail:
      msg: "container not specified for the project init params"
    when: (project_init.container | default('')) == ''

  - name: "{{ project_title }} - project_container_type"
    set_fact:
      project_container_type: "{{ project_init.container_type | default('docker', true) }}"

  - name: "{{ project_title }} - validate container_type"
    fail:
      msg: "container_type value invalid ({{ project_container_type }})"
    when: not (project_container_type in ['docker'])

  - name: "{{ project_title }} - verify the project repo params"
    fail:
      msg: "{{ project_item }} not specified for the project repository"
    when: (project_repo[project_item] | default('')) == ''
    loop:
    - "env_dir"
    - "src"
    - "version"
    loop_control:
      loop_var: project_item

  ### Project - Parameters and Variables ###

  - name: "{{ project_title }} - define the project dirs and files"
    set_fact:
      project_base_dir: "/main/{{ project_dir_rel }}"
      project_secrets_dir: "/main/{{ project_dir_rel }}/secrets"
      project_init_dir: "/main/{{ project_dir_rel }}/init"
      project_repo_ssh_file: >-
        {{
          ((project_repo.ssh_file | default('')) != '')
          | ternary('ssh.key', '')
        }}
      project_repo_vault_file: >-
        {{
          ((project_repo_vault.file | default('')) != '')
          | ternary('vault', '')
        }}

  - name: "{{ project_title }} - define the project init params"
    set_fact:
      project_init_params:
        key: "{{ env_project_key }}"
        root_dir: "{{ env_root_dir }}"
        dev: "{{ env_dev | default(false, true) }}"
        project_dir_rel: "{{ project_dir_rel }}"
        init:
          container: "{{ project_init.container }}"
          container_type: "{{ project_container_type }}"
          root: "{{ project_init.root | default(false, true) }}"
        repo:
          env_dir: "{{ project_repo.env_dir }}"
          src: "{{ project_repo.src }}"
          version: "{{ project_repo.version }}"
          ssh_file: "{{ project_repo_ssh_file }}"
        repo_vault:
          force: "{{ project_repo_vault.force | default(false, true) }}"
          file: "{{ project_repo_vault_file }}"

  ### Project - Directories and Files ###

  - name: "{{ project_title }} - create the project directories"
    file:
      path: "{{ project_base_dir }}/{{ project_item }}"
      state: directory
      mode: "{{ env_dev | default(false, true) | bool | ternary(0777, 0755) }}"
    loop:
    - "secrets"
    - "init"
    - "data"
    loop_control:
      loop_var: project_item

  - name: "{{ project_title }} - copy ssh file"
    copy:
      src: "env-main/{{ project_repo.ssh_file }}"
      dest: "{{ project_secrets_dir }}/{{ project_repo_ssh_file }}"
      decrypt: "{{ project_repo.ssh_file_encrypted | default(false) | bool }}"
      mode: "{{ env_dev | default(false, true) | bool | ternary(0666, 0600) }}"
    when: project_repo_ssh_file != ''

  - name: "{{ project_title }} - copy the vault file"
    copy:
      src: "env-main/{{ project_repo_vault.file }}"
      dest: "{{ project_secrets_dir }}/{{ project_repo_vault_file }}"
      mode: "{{ env_dev | default(false, true) | bool | ternary(0666, 0600) }}"
    when: project_repo_vault_file != ''

  - name: "{{ project_title }} - create the project init config file"
    copy:
      content: "{{ project_init_params | to_nice_yaml }}"
      dest: "{{ project_init_dir }}/vars.yml"
      mode: "{{ env_dev | default(false, true) | bool | ternary(0666, 0600) }}"

  - name: "{{ project_title }} - create the project init run file"
    template:
      src: "templates/init.tpl.sh"
      dest: "{{ project_init_dir }}/init.sh"
      mode: "{{ env_dev | default(false, true) | bool | ternary(0777, 0700) }}"
    vars:
      params: "{{ project_init_params }}"